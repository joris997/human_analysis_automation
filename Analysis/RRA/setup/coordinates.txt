lists of coordinates in sub06 (37):
pelvis_tilt
pelvis_list
pelvis_rotation
pelvis_tx
pelvis_ty
pelvis_tz

hip_flexion_r
hip_adduction_r
hip_rotation_r
hip_flexion_l
hip_adduction_l
hip_rotation_l

knee_angle_r
knee_angle_l

ankle_angle_r
ankle_angle_l

subtalar_angle_r [locked]
subtalar_angle_l [locked]

mtp_angle_r [locked]
mtp_angle_l [locked]

lumbar_extension
lumbar_bending
lumbar_rotation


-- added --
arm_flex_r
arm_add_r
arm_rot_r
arm_flex_l
arm_add_l
arm_rot_l

elbow_flex_r
elbow_flex_l

pro_sup_r
pro_sup_l

wrist_flex_r [locked]
wrist_dev_r [locked]
wrist_flex_l [locked]
wrist_dev_l [locked]









<CMC_Joint name="subtalar_angle_r">
        <!--Flag (true or false) indicating whether or not a task is enabled.-->
        <on>false</on>
        <!--Weight with which a task is tracked relative to other tasks. To track a task more tightly, make the weight larger.-->
        <weight> 20</weight>
        <!--Name of body frame with respect to which a tracking objective is specified. The special name 'center_of_mass' refers to the system center of mass. This property is not used for tracking joint angles.-->
        <wrt_body>-1</wrt_body>
        <!--Name of body frame in which the tracking objectives are expressed.  This property is not used for tracking joint angles.-->
        <express_body>-1</express_body>
        <!--Array of 3 flags (each true or false) specifying whether a component of a task is active.  For example, tracking the trajectory of a point in space could have three components (x,y,z).  This allows each of those to be made active (true) or inactive (false).  A task for tracking a joint coordinate only has one component.-->
        <active>true false false </active>
        <!--Position error feedback gain (stiffness). To achieve critical damping of errors, choose kv = 2*sqrt(kp).-->
        <kp> 100 1 1</kp>
        <!--Velocity error feedback gain (damping). To achieve critical damping of errors, choose kv = 2*sqrt(kp).-->
        <kv> 20 1 1</kv>
        <!--Feedforward acceleration gain.  This is normally set to 1.0, so no gain.-->
        <ka> 1 1 1</ka>
        <!--Direction vector[3] for component 0 of a task. Joint tasks do not use this property.-->
        <r0> 0 0 0</r0>
        <!--Direction vector[3] for component 1 of a task. Joint tasks do not use this property.-->
        <r1> 0 0 0</r1>
        <!--Direction vector[3] for component 2 of a task. Joint tasks do not use this property.-->
        <r2> 0 0 0</r2>
        <!--Name of the coordinate to be tracked.-->
        <coordinate>subtalar_angle_r</coordinate>
        <!--Error limit on the tracking accuracy for this coordinate. If the tracking errors approach this limit, the weighting for this coordinate is increased. -->
        <limit>0</limit>
</CMC_Joint>
<CMC_Joint name="mtp_angle_r">
        <!--Flag (true or false) indicating whether or not a task is enabled.-->
        <on>false</on>
        <!--Weight with which a task is tracked relative to other tasks. To track a task more tightly, make the weight larger.-->
        <weight> 20</weight>
        <!--Name of body frame with respect to which a tracking objective is specified. The special name 'center_of_mass' refers to the system center of mass. This property is not used for tracking joint angles.-->
        <wrt_body>-1</wrt_body>
        <!--Name of body frame in which the tracking objectives are expressed.  This property is not used for tracking joint angles.-->
        <express_body>-1</express_body>
        <!--Array of 3 flags (each true or false) specifying whether a component of a task is active.  For example, tracking the trajectory of a point in space could have three components (x,y,z).  This allows each of those to be made active (true) or inactive (false).  A task for tracking a joint coordinate only has one component.-->
        <active>true false false </active>
        <!--Position error feedback gain (stiffness). To achieve critical damping of errors, choose kv = 2*sqrt(kp).-->
        <kp> 100 1 1</kp>
        <!--Velocity error feedback gain (damping). To achieve critical damping of errors, choose kv = 2*sqrt(kp).-->
        <kv> 20 1 1</kv>
        <!--Feedforward acceleration gain.  This is normally set to 1.0, so no gain.-->
        <ka> 1 1 1</ka>
        <!--Direction vector[3] for component 0 of a task. Joint tasks do not use this property.-->
        <r0> 0 0 0</r0>
        <!--Direction vector[3] for component 1 of a task. Joint tasks do not use this property.-->
        <r1> 0 0 0</r1>
        <!--Direction vector[3] for component 2 of a task. Joint tasks do not use this property.-->
        <r2> 0 0 0</r2>
        <!--Name of the coordinate to be tracked.-->
        <coordinate>mtp_angle_r</coordinate>
        <!--Error limit on the tracking accuracy for this coordinate. If the tracking errors approach this limit, the weighting for this coordinate is increased. -->
        <limit>0</limit>
</CMC_Joint>


<CMC_Joint name="subtalar_angle_l">
        <!--Flag (true or false) indicating whether or not a task is enabled.-->
        <on>false</on>
        <!--Weight with which a task is tracked relative to other tasks. To track a task more tightly, make the weight larger.-->
        <weight> 20</weight>
        <!--Name of body frame with respect to which a tracking objective is specified. The special name 'center_of_mass' refers to the system center of mass. This property is not used for tracking joint angles.-->
        <wrt_body>-1</wrt_body>
        <!--Name of body frame in which the tracking objectives are expressed.  This property is not used for tracking joint angles.-->
        <express_body>-1</express_body>
        <!--Array of 3 flags (each true or false) specifying whether a component of a task is active.  For example, tracking the trajectory of a point in space could have three components (x,y,z).  This allows each of those to be made active (true) or inactive (false).  A task for tracking a joint coordinate only has one component.-->
        <active>true false false </active>
        <!--Position error feedback gain (stiffness). To achieve critical damping of errors, choose kv = 2*sqrt(kp).-->
        <kp> 100 1 1</kp>
        <!--Velocity error feedback gain (damping). To achieve critical damping of errors, choose kv = 2*sqrt(kp).-->
        <kv> 20 1 1</kv>
        <!--Feedforward acceleration gain.  This is normally set to 1.0, so no gain.-->
        <ka> 1 1 1</ka>
        <!--Direction vector[3] for component 0 of a task. Joint tasks do not use this property.-->
        <r0> 0 0 0</r0>
        <!--Direction vector[3] for component 1 of a task. Joint tasks do not use this property.-->
        <r1> 0 0 0</r1>
        <!--Direction vector[3] for component 2 of a task. Joint tasks do not use this property.-->
        <r2> 0 0 0</r2>
        <!--Name of the coordinate to be tracked.-->
        <coordinate>subtalar_angle_l</coordinate>
        <!--Error limit on the tracking accuracy for this coordinate. If the tracking errors approach this limit, the weighting for this coordinate is increased. -->
        <limit>0</limit>
</CMC_Joint>
<CMC_Joint name="mtp_angle_l">
        <!--Flag (true or false) indicating whether or not a task is enabled.-->
        <on>false</on>
        <!--Weight with which a task is tracked relative to other tasks. To track a task more tightly, make the weight larger.-->
        <weight> 20</weight>
        <!--Name of body frame with respect to which a tracking objective is specified. The special name 'center_of_mass' refers to the system center of mass. This property is not used for tracking joint angles.-->
        <wrt_body>-1</wrt_body>
        <!--Name of body frame in which the tracking objectives are expressed.  This property is not used for tracking joint angles.-->
        <express_body>-1</express_body>
        <!--Array of 3 flags (each true or false) specifying whether a component of a task is active.  For example, tracking the trajectory of a point in space could have three components (x,y,z).  This allows each of those to be made active (true) or inactive (false).  A task for tracking a joint coordinate only has one component.-->
        <active>true false false </active>
        <!--Position error feedback gain (stiffness). To achieve critical damping of errors, choose kv = 2*sqrt(kp).-->
        <kp> 100 1 1</kp>
        <!--Velocity error feedback gain (damping). To achieve critical damping of errors, choose kv = 2*sqrt(kp).-->
        <kv> 20 1 1</kv>
        <!--Feedforward acceleration gain.  This is normally set to 1.0, so no gain.-->
        <ka> 1 1 1</ka>
        <!--Direction vector[3] for component 0 of a task. Joint tasks do not use this property.-->
        <r0> 0 0 0</r0>
        <!--Direction vector[3] for component 1 of a task. Joint tasks do not use this property.-->
        <r1> 0 0 0</r1>
        <!--Direction vector[3] for component 2 of a task. Joint tasks do not use this property.-->
        <r2> 0 0 0</r2>
        <!--Name of the coordinate to be tracked.-->
        <coordinate>mtp_angle_l</coordinate>
        <!--Error limit on the tracking accuracy for this coordinate. If the tracking errors approach this limit, the weighting for this coordinate is increased. -->
        <limit>0</limit>
</CMC_Joint>















<CMC_Joint name="wrist_flex_r">
        <!--Flag (true or false) indicating whether or not a task is enabled.-->
        <on>false</on>
        <!--Weight with which a task is tracked relative to other tasks. To track a task more tightly, make the weight larger.-->
        <weight> 20</weight>
        <!--Name of body frame with respect to which a tracking objective is specified. The special name 'center_of_mass' refers to the system center of mass. This property is not used for tracking joint angles.-->
        <wrt_body>-1</wrt_body>
        <!--Name of body frame in which the tracking objectives are expressed.  This property is not used for tracking joint angles.-->
        <express_body>-1</express_body>
        <!--Array of 3 flags (each true or false) specifying whether a component of a task is active.  For example, tracking the trajectory of a point in space could have three components (x,y,z).  This allows each of those to be made active (true) or inactive (false).  A task for tracking a joint coordinate only has one component.-->
        <active>true false false </active>
        <!--Position error feedback gain (stiffness). To achieve critical damping of errors, choose kv = 2*sqrt(kp).-->
        <kp> 100 1 1</kp>
        <!--Velocity error feedback gain (damping). To achieve critical damping of errors, choose kv = 2*sqrt(kp).-->
        <kv> 20 1 1</kv>
        <!--Feedforward acceleration gain.  This is normally set to 1.0, so no gain.-->
        <ka> 1 1 1</ka>
        <!--Direction vector[3] for component 0 of a task. Joint tasks do not use this property.-->
        <r0> 0 0 0</r0>
        <!--Direction vector[3] for component 1 of a task. Joint tasks do not use this property.-->
        <r1> 0 0 0</r1>
        <!--Direction vector[3] for component 2 of a task. Joint tasks do not use this property.-->
        <r2> 0 0 0</r2>
        <!--Name of the coordinate to be tracked.-->
        <coordinate>wrist_flex_r</coordinate>
        <!--Error limit on the tracking accuracy for this coordinate. If the tracking errors approach this limit, the weighting for this coordinate is increased. -->
        <limit>0</limit>
</CMC_Joint>
<CMC_Joint name="wrist_dev_r">
        <!--Flag (true or false) indicating whether or not a task is enabled.-->
        <on>false</on>
        <!--Weight with which a task is tracked relative to other tasks. To track a task more tightly, make the weight larger.-->
        <weight> 20</weight>
        <!--Name of body frame with respect to which a tracking objective is specified. The special name 'center_of_mass' refers to the system center of mass. This property is not used for tracking joint angles.-->
        <wrt_body>-1</wrt_body>
        <!--Name of body frame in which the tracking objectives are expressed.  This property is not used for tracking joint angles.-->
        <express_body>-1</express_body>
        <!--Array of 3 flags (each true or false) specifying whether a component of a task is active.  For example, tracking the trajectory of a point in space could have three components (x,y,z).  This allows each of those to be made active (true) or inactive (false).  A task for tracking a joint coordinate only has one component.-->
        <active>true false false </active>
        <!--Position error feedback gain (stiffness). To achieve critical damping of errors, choose kv = 2*sqrt(kp).-->
        <kp> 100 1 1</kp>
        <!--Velocity error feedback gain (damping). To achieve critical damping of errors, choose kv = 2*sqrt(kp).-->
        <kv> 20 1 1</kv>
        <!--Feedforward acceleration gain.  This is normally set to 1.0, so no gain.-->
        <ka> 1 1 1</ka>
        <!--Direction vector[3] for component 0 of a task. Joint tasks do not use this property.-->
        <r0> 0 0 0</r0>
        <!--Direction vector[3] for component 1 of a task. Joint tasks do not use this property.-->
        <r1> 0 0 0</r1>
        <!--Direction vector[3] for component 2 of a task. Joint tasks do not use this property.-->
        <r2> 0 0 0</r2>
        <!--Name of the coordinate to be tracked.-->
        <coordinate>wrist_dev_r</coordinate>
        <!--Error limit on the tracking accuracy for this coordinate. If the tracking errors approach this limit, the weighting for this coordinate is increased. -->
        <limit>0</limit>
</CMC_Joint>
<CMC_Joint name="wrist_flex_l">
        <!--Flag (true or false) indicating whether or not a task is enabled.-->
        <on>false</on>
        <!--Weight with which a task is tracked relative to other tasks. To track a task more tightly, make the weight larger.-->
        <weight> 20</weight>
        <!--Name of body frame with respect to which a tracking objective is specified. The special name 'center_of_mass' refers to the system center of mass. This property is not used for tracking joint angles.-->
        <wrt_body>-1</wrt_body>
        <!--Name of body frame in which the tracking objectives are expressed.  This property is not used for tracking joint angles.-->
        <express_body>-1</express_body>
        <!--Array of 3 flags (each true or false) specifying whether a component of a task is active.  For example, tracking the trajectory of a point in space could have three components (x,y,z).  This allows each of those to be made active (true) or inactive (false).  A task for tracking a joint coordinate only has one component.-->
        <active>true false false </active>
        <!--Position error feedback gain (stiffness). To achieve critical damping of errors, choose kv = 2*sqrt(kp).-->
        <kp> 100 1 1</kp>
        <!--Velocity error feedback gain (damping). To achieve critical damping of errors, choose kv = 2*sqrt(kp).-->
        <kv> 20 1 1</kv>
        <!--Feedforward acceleration gain.  This is normally set to 1.0, so no gain.-->
        <ka> 1 1 1</ka>
        <!--Direction vector[3] for component 0 of a task. Joint tasks do not use this property.-->
        <r0> 0 0 0</r0>
        <!--Direction vector[3] for component 1 of a task. Joint tasks do not use this property.-->
        <r1> 0 0 0</r1>
        <!--Direction vector[3] for component 2 of a task. Joint tasks do not use this property.-->
        <r2> 0 0 0</r2>
        <!--Name of the coordinate to be tracked.-->
        <coordinate>wrist_flex_l</coordinate>
        <!--Error limit on the tracking accuracy for this coordinate. If the tracking errors approach this limit, the weighting for this coordinate is increased. -->
        <limit>0</limit>
</CMC_Joint>
<CMC_Joint name="wrist_dev_l">
        <!--Flag (true or false) indicating whether or not a task is enabled.-->
        <on>false</on>
        <!--Weight with which a task is tracked relative to other tasks. To track a task more tightly, make the weight larger.-->
        <weight> 20</weight>
        <!--Name of body frame with respect to which a tracking objective is specified. The special name 'center_of_mass' refers to the system center of mass. This property is not used for tracking joint angles.-->
        <wrt_body>-1</wrt_body>
        <!--Name of body frame in which the tracking objectives are expressed.  This property is not used for tracking joint angles.-->
        <express_body>-1</express_body>
        <!--Array of 3 flags (each true or false) specifying whether a component of a task is active.  For example, tracking the trajectory of a point in space could have three components (x,y,z).  This allows each of those to be made active (true) or inactive (false).  A task for tracking a joint coordinate only has one component.-->
        <active>true false false </active>
        <!--Position error feedback gain (stiffness). To achieve critical damping of errors, choose kv = 2*sqrt(kp).-->
        <kp> 100 1 1</kp>
        <!--Velocity error feedback gain (damping). To achieve critical damping of errors, choose kv = 2*sqrt(kp).-->
        <kv> 20 1 1</kv>
        <!--Feedforward acceleration gain.  This is normally set to 1.0, so no gain.-->
        <ka> 1 1 1</ka>
        <!--Direction vector[3] for component 0 of a task. Joint tasks do not use this property.-->
        <r0> 0 0 0</r0>
        <!--Direction vector[3] for component 1 of a task. Joint tasks do not use this property.-->
        <r1> 0 0 0</r1>
        <!--Direction vector[3] for component 2 of a task. Joint tasks do not use this property.-->
        <r2> 0 0 0</r2>
        <!--Name of the coordinate to be tracked.-->
        <coordinate>wrist_dev_l</coordinate>
        <!--Error limit on the tracking accuracy for this coordinate. If the tracking errors approach this limit, the weighting for this coordinate is increased. -->
        <limit>0</limit>
</CMC_Joint>
